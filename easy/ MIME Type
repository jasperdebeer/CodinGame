using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Solution
{
    static void Main(string[] args)
    {
        int N = int.Parse(Console.ReadLine()); // Number of elements which make up the association table.
        int Q = int.Parse(Console.ReadLine()); // Number Q of file names to be analyzed.
        
        Dictionary<string, string> dictionary = new Dictionary<string,string>(); // EXT als key en MT als value
        List<string> filenames = new List<string>();
        
        for (int i = 0; i < N; i++)
        {
            string[] inputs = Console.ReadLine().Split(' ');
            string EXT = inputs[0].ToLower(); // file extension
            string MT = inputs[1]; // MIME type.
            dictionary.Add(EXT,MT);
        }
        for (int i = 0; i < Q; i++)
        {
            string FNAME = Console.ReadLine(); // One file name per line.
            FNAME = FNAME.ToLower();
            if(FNAME.Contains("."))
            {
                FNAME = FNAME.Substring(FNAME.LastIndexOf(".")+1); // vind de laaste punt en geef alles daarna (+1) weer
            }
            else
            {
                FNAME = "N/A";    
            }
            filenames.Add(FNAME);
        }

        foreach(string extention in filenames)
        {
            if(extention == "N/A")
            {
                Console.WriteLine("UNKNOWN"); // For each of the Q filenames, display on a line the corresponding MIME type. If there is no corresponding type, then display UNKNOWN.            
            }
            else if (dictionary.ContainsKey(extention))
            {
                string juisteMT = string.Empty;
                dictionary.TryGetValue(extention, out juisteMT);
                Console.WriteLine(juisteMT);
            }
            else
            {
                Console.WriteLine("UNKNOWN"); // For each of the Q filenames, display on a line the corresponding MIME type. If there is no corresponding type, then display UNKNOWN.
            }
        }
    }
}
