using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;

/**
 * Don't let the machines win. You are humanity's last hope...
 **/
class Player
{
    
    static string none = "-1 -1";
    static int width;
    static int height;
    static bool[,] map;
    
    static void Main(string[] args)
    {
        width = int.Parse(Console.ReadLine()); // the number of cells on the X axis
        height = int.Parse(Console.ReadLine()); // the number of cells on the Y axis
        
        map = new bool[width, height];

        for (int i = 0; i < height; i++)
        {
            string line = Console.ReadLine(); // width characters, each either 0 or .
            Console.Error.WriteLine(line);
            
            for(int x = 0; x < width; x++) {
                switch(line[x]) {
                    case '0':
                        map[x,i] = true;
                        break;
                    case '.':
                        map[x,i] = false;
                    break;
                }
            }
        }
        
        for(int y = 0; y < height; y++) {
            for(int x = 0; x < width; x++) {
                if(map[x,y] == true) {
                    string s = currentNode(x, y);
                    string r = rightNode(x, y);
                    string b = bottomNode(x, y);
                    
                    Console.WriteLine(nodes(s,r,b));
                }
            }
        }
    }
     
     public static string currentNode(int x, int y)
    {
        return string.Format("{0} {1}", x, y);
    }
    
    public static string rightNode(int sx, int sy) {
        for(int x = sx+1; x < width; x++) {
            if(map[x, sy] == true) return currentNode(x, sy);
        }
        return none;
    }
    
    public static string bottomNode(int sx, int sy) {
        for(int y = sy+1; y < height; y++) {
            if(map[sx, y] == true) return currentNode(sx, y);
        }
        return none;
    }
    
    public static string nodes(string select, string right, string bottom)
    {
        return string.Format("{0} {1} {2}", select, right, bottom);
    }
    
}
